
N,M = map(int,input().split())
array = []

tetris = [
    [(0, 0), (0, 1), (1, 0), (1, 1)], # ㅁ
    [(0, 0), (0, 1), (0, 2), (0, 3)], # ㅣ
    [(0, 0), (1, 0), (2, 0), (3, 0)], # ㅡ
    [(0, 0), (1, 0), (1, 1), (2, 1)], # h
    [(1, 0), (0, 1), (1, 1), (2, 0)], # h 회전
    [(1, 0), (1, 1), (0, 1), (0, 2)], # ...
    [(0, 0), (0, 1), (1, 1), (1, 2)],
    [(0, 0), (1, 0), (2, 0), (2, 1)], # L
    [(0, 1), (1, 1), (2, 0), (2, 1)], # ...
    [(0, 0), (0, 1), (1, 0), (2, 0)],
    [(0, 0), (0, 1), (1, 1), (2, 1)],
    [(1, 0), (0, 1), (1, 1), (1, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 1)],
    [(0, 0), (1, 0), (1, 1), (1, 2)],
    [(1, 0), (1, 1), (1, 2), (0, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 0)],
    [(0, 0), (0, 1), (0, 2), (1, 2)],
    [(0, 0), (1, 0), (1, 1), (2, 0)],
    [(1, 0), (0, 1), (1, 1), (2, 1)] # ㅓ
]

for i in range(N): 
    temp = list(map(int,input().split()))
    array.append(temp)

t_sum = 0 
maximum = 0

for i in range(N):
    for j in range(M):
        for k in range(19):
            for l in range(4): 
                nx = i+tetris[k][l][0]
                ny = j+tetris[k][l][1] 

                #범위를 벗어날 경우
                if nx < 0 or nx >= N or ny < 0 or ny >= M:
                    t_sum = 0
                    break 

                t_sum += array[nx][ny] 

            if t_sum > maximum:
                maximum = t_sum 
            t_sum = 0 

print(maximum)
